'scopeName': 'source.smudge'
'name': 'Smudge'
'fileTypes': ['sm', 'smudge']

'patterns': [
    {
        'begin': '\''
        'end': '\''
        'name': 'string.quoted.single.smudge'
        'patterns': [
            {
                'match': '\\\\(([abfnrtv\'\"\\\\])|([0-9]{1,3})|(x[0-9A-Fa-f]{1,2})|(u[0-9A-Fa-f]{1,4})|(U[0-9A-Fa-f]{1,8}))'
                'name': 'constant.character.escape.smudge'
            }
        ]
    },

    {
        'begin': '\"'
        'end': '\"'
        'name': 'string.quoted.double.smudge'
        'patterns': [
            {
                'match': '\\\\(([abfnrtv\'\"\\\\])|([0-9]{1,3})|(x[0-9A-Fa-f]{1,2})|(u[0-9A-Fa-f]{1,4})|(U[0-9A-Fa-f]{1,8}))'
                'name': 'constant.character.escape.smudge'
            }
        ]
    },

    {
        'match': '(//|#).*'
        'name': 'comment.line.double-slash.smudge'
    },

    {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment.block.smudge'
    },

    {
        'match': '\\b((0[Xx][0-9A-Fa-f]+)|(0[Bb][01]+)|([1-9][0-9]*\\.[0-9]*)|(0[0-7]*)|([1-9][0-9]*))\\b'
        'name': 'constant.numeric.smudge'
    },

    {
        'match': '\\b(false|true|(null(?!\\s*\\()))\\b'
        'name': 'constant.language.smudge'
    },

    {
        'match': '\\b(box|case|catch|default|\
                    do|else|enum|for|if|hidden|\
                    static|switch|sync|try|while)\\b'
        'name': 'keyword.other.smudge'
    },

    {
        'match': '\\b(this|super)\\b'
        'name': 'variable.language.smudge'
    },

    {
        'match': '\\b(break|continue|return|throw)\\b'
        'name': 'keyword.control.smudge'
    },

    {
        'match': '\\b(func)\\s+([A-Za-z_$][A-Za-z_$0-9]*)(\\s*\\((([^\\(\\)]*\\([^\\(\\)]\\))*|[^\\(\\)]*)\\))?'
        'captures':
            '1':
                'name': 'storage.type.smudge'
            '2':
                'name': 'entity.name.function.smudge'
            '4':
                'name': 'variable.parameter.smudge'
            'name': 'meta.function.smudge'
    },

    {
        'match': '\\b(func)\\s+(\\~|!|\\-\\-|\\+\\+|\\-|\\+|<<|\\*|/|%|>>|\\||\
            &|\\^|&&|\\|\\||==|>|>=|<|<=|\\!=|\\(\\)|\\[\\])(\\s*\\((([^\\(\\)]*\\([^\\(\\)]\\))*|[^\\(\\)]*)\\))?'
        'captures':
            '1':
                'name': 'storage.type.smudge'
            '2':
                'name': 'entity.name.function.smudge'
            '4':
                'name': 'variable.parameter.smudge'
        'name': 'meta.function.smudge'
    },

    {
        'match': '\\b(var)\\s+([A-Za-z_$][A-Za-z_$0-9]*)\\b'
        'captures':
            '1':
                'name': 'storage.type.smudge'
        'name': 'meta.variable.smudge'
    },

    {
        'match': '\\b(import)\\s+([A-Za-z_$][A-Za-z_$0-9]*\\s*\\.?\\s*)+(=)\\s*([A-Za-z_$][A-Za-z_$0-9]*)\\b'
        'captures':
            '1':
                'name': 'storage.type.smudge'
            '3':
                'name': 'keyword.operator.smudge'
        'name': 'meta.import.smudge'
    },

    {
        'match': '\\b([A-Za-z_$][A-Za-z_$0-9]*)\\s*(?=\\(.*\\))'
        'captures':
            '1':
                'name': 'entity.name.function'
        'name': 'meta.function.smudge'
    },

    {
        'match': '\\b(class)\\s+([A-Za-z_$][A-Za-z_$0-9]*)\\s*(\\s*\\((([^\\(\\)]*\\([^\\(\\)]\\))*|[^\\(\\)]*)\\))?'
        'captures':
            '1':
                'name': 'storage.type.smudge'
            '2':
                'name': 'entity.name.type'
            '4':
                'name': 'entity.other.inherited-class'
        'name': 'meta.class.smudge'
    }

    {
        'match': '(\\-\\-|\\+\\+|\\-|\\+|\\~|!|/|<<|\\*|%|\\+|>>|\\||&|\\^|&&|\\|\\||==|>|>=|\
                <|<=|!=|\\?|:|=|&=|/=|<<=|\\-=|\\*=|%=|\\|=|\\^=|\\+=|>>=)'
        'name': 'keyword.operator.smudge'
    }
]
